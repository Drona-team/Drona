package com.google.android.gms.iid;

import android.content.BroadcastReceiver.PendingResult;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.IBinder;
import android.util.Log;
import androidx.annotation.GuardedBy;
import androidx.annotation.VisibleForTesting;
import com.google.android.gms.common.stats.ConnectionTracker;
import com.google.android.gms.common.util.concurrent.NamedThreadFactory;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.ScheduledThreadPoolExecutor;

public final class zzk
  implements ServiceConnection
{
  private final Intent zzbp;
  private final ScheduledExecutorService zzbq;
  private final Queue<zzg> zzbr = new ArrayDeque();
  private zzi zzbs;
  @GuardedBy("this")
  private boolean zzbt = false;
  private final Context zzl;
  
  public zzk(Context paramContext, String paramString)
  {
    this(paramContext, paramString, new ScheduledThreadPoolExecutor(0, new NamedThreadFactory("EnhancedIntentService")));
  }
  
  @VisibleForTesting
  private zzk(Context paramContext, String paramString, ScheduledExecutorService paramScheduledExecutorService)
  {
    zzl = paramContext.getApplicationContext();
    zzbp = new Intent(paramString).setPackage(zzl.getPackageName());
    zzbq = paramScheduledExecutorService;
  }
  
  private final void zzm()
  {
    try
    {
      if (Log.isLoggable("EnhancedIntentService", 3)) {
        Log.d("EnhancedIntentService", "flush queue called");
      }
      while (!zzbr.isEmpty())
      {
        if (Log.isLoggable("EnhancedIntentService", 3)) {
          Log.d("EnhancedIntentService", "found intent to be delivered");
        }
        Object localObject1;
        if ((zzbs != null) && (zzbs.isBinderAlive()))
        {
          if (Log.isLoggable("EnhancedIntentService", 3)) {
            Log.d("EnhancedIntentService", "binder is alive, sending the intent.");
          }
          localObject1 = (zzg)zzbr.poll();
          zzbs.zzd((zzg)localObject1);
        }
        else
        {
          boolean bool;
          if (Log.isLoggable("EnhancedIntentService", 3))
          {
            bool = zzbt;
            localObject1 = new StringBuilder(39);
            ((StringBuilder)localObject1).append("binder is dead. start connection? ");
            ((StringBuilder)localObject1).append(bool ^ true);
            Log.d("EnhancedIntentService", ((StringBuilder)localObject1).toString());
          }
          if (!zzbt)
          {
            zzbt = true;
            try
            {
              bool = ConnectionTracker.getInstance().bindService(zzl, zzbp, this, 65);
              if (bool) {
                return;
              }
              Log.e("EnhancedIntentService", "binding to the service failed");
            }
            catch (SecurityException localSecurityException)
            {
              Log.e("EnhancedIntentService", "Exception while binding the service", localSecurityException);
            }
            zzbt = false;
            zzn();
          }
          return;
        }
      }
      return;
    }
    finally {}
  }
  
  @GuardedBy("this")
  private final void zzn()
  {
    while (!zzbr.isEmpty()) {
      ((zzg)zzbr.poll()).finish();
    }
  }
  
  public final void onServiceConnected(ComponentName paramComponentName, IBinder paramIBinder)
  {
    try
    {
      zzbt = false;
      zzbs = ((zzi)paramIBinder);
      if (Log.isLoggable("EnhancedIntentService", 3))
      {
        paramComponentName = String.valueOf(paramComponentName);
        StringBuilder localStringBuilder = new StringBuilder(String.valueOf(paramComponentName).length() + 20);
        localStringBuilder.append("onServiceConnected: ");
        localStringBuilder.append(paramComponentName);
        Log.d("EnhancedIntentService", localStringBuilder.toString());
      }
      if (paramIBinder == null)
      {
        Log.e("EnhancedIntentService", "Null service connection");
        zzn();
      }
      else
      {
        zzm();
      }
      return;
    }
    finally {}
  }
  
  public final void onServiceDisconnected(ComponentName paramComponentName)
  {
    if (Log.isLoggable("EnhancedIntentService", 3))
    {
      paramComponentName = String.valueOf(paramComponentName);
      StringBuilder localStringBuilder = new StringBuilder(String.valueOf(paramComponentName).length() + 23);
      localStringBuilder.append("onServiceDisconnected: ");
      localStringBuilder.append(paramComponentName);
      Log.d("EnhancedIntentService", localStringBuilder.toString());
    }
    zzm();
  }
  
  public final void zzd(Intent paramIntent, BroadcastReceiver.PendingResult paramPendingResult)
  {
    try
    {
      if (Log.isLoggable("EnhancedIntentService", 3)) {
        Log.d("EnhancedIntentService", "new intent queued in the bind-strategy delivery");
      }
      zzbr.add(new zzg(paramIntent, paramPendingResult, zzbq));
      zzm();
      return;
    }
    finally {}
  }
}
