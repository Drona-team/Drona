package com.google.android.exoplayer2.metadata.scte35;

import com.google.android.exoplayer2.metadata.Metadata;
import com.google.android.exoplayer2.metadata.Metadata.Entry;
import com.google.android.exoplayer2.metadata.MetadataDecoder;
import com.google.android.exoplayer2.metadata.MetadataInputBuffer;
import com.google.android.exoplayer2.util.ParsableBitArray;
import com.google.android.exoplayer2.util.ParsableByteArray;
import com.google.android.exoplayer2.util.TimestampAdjuster;
import java.nio.ByteBuffer;

public final class SpliceInfoDecoder
  implements MetadataDecoder
{
  private static final int TYPE_PRIVATE_COMMAND = 255;
  private static final int TYPE_SPLICE_INSERT = 5;
  private static final int TYPE_SPLICE_NULL = 0;
  private static final int TYPE_SPLICE_SCHEDULE = 4;
  private static final int TYPE_TIME_SIGNAL = 6;
  private final ParsableByteArray sectionData = new ParsableByteArray();
  private final ParsableBitArray sectionHeader = new ParsableBitArray();
  private TimestampAdjuster timestampAdjuster;
  
  public SpliceInfoDecoder() {}
  
  public Metadata decode(MetadataInputBuffer paramMetadataInputBuffer)
  {
    if ((timestampAdjuster == null) || (subsampleOffsetUs != timestampAdjuster.getTimestampOffsetUs()))
    {
      timestampAdjuster = new TimestampAdjuster(timeUs);
      timestampAdjuster.adjustSampleTimestamp(timeUs - subsampleOffsetUs);
    }
    paramMetadataInputBuffer = data;
    byte[] arrayOfByte = paramMetadataInputBuffer.array();
    int i = paramMetadataInputBuffer.limit();
    sectionData.reset(arrayOfByte, i);
    sectionHeader.reset(arrayOfByte, i);
    sectionHeader.skipBits(39);
    long l = sectionHeader.readBits(1) << 32 | sectionHeader.readBits(32);
    sectionHeader.skipBits(20);
    i = sectionHeader.readBits(12);
    int j = sectionHeader.readBits(8);
    paramMetadataInputBuffer = null;
    sectionData.skipBytes(14);
    if (j != 0)
    {
      if (j != 255) {
        switch (j)
        {
        default: 
          break;
        case 6: 
          paramMetadataInputBuffer = TimeSignalCommand.parseFromSection(sectionData, l, timestampAdjuster);
          break;
        case 5: 
          paramMetadataInputBuffer = SpliceInsertCommand.parseFromSection(sectionData, l, timestampAdjuster);
          break;
        case 4: 
          paramMetadataInputBuffer = SpliceScheduleCommand.parseFromSection(sectionData);
          break;
        }
      } else {
        paramMetadataInputBuffer = PrivateCommand.parseFromSection(sectionData, i, l);
      }
    }
    else {
      paramMetadataInputBuffer = new SpliceNullCommand();
    }
    if (paramMetadataInputBuffer == null) {
      return new Metadata(new Metadata.Entry[0]);
    }
    return new Metadata(new Metadata.Entry[] { paramMetadataInputBuffer });
  }
}
