package com.google.android.exoplayer2.upstream;

import android.content.Context;
import android.content.res.AssetManager;
import android.net.Uri;
import androidx.annotation.Nullable;
import java.io.EOFException;
import java.io.IOException;
import java.io.InputStream;

public final class AssetDataSource
  extends BaseDataSource
{
  private final AssetManager assetManager;
  private long bytesRemaining;
  @Nullable
  private InputStream inputStream;
  private boolean opened;
  @Nullable
  private Uri uri;
  
  public AssetDataSource(Context paramContext)
  {
    super(false);
    assetManager = paramContext.getAssets();
  }
  
  @Deprecated
  public AssetDataSource(Context paramContext, @Nullable TransferListener paramTransferListener)
  {
    this(paramContext);
    if (paramTransferListener != null) {
      addTransferListener(paramTransferListener);
    }
  }
  
  /* Error */
  public void close()
    throws AssetDataSource.AssetDataSourceException
  {
    // Byte code:
    //   0: aload_0
    //   1: aconst_null
    //   2: putfield 48	com/google/android/exoplayer2/upstream/AssetDataSource:uri	Landroid/net/Uri;
    //   5: aload_0
    //   6: getfield 50	com/google/android/exoplayer2/upstream/AssetDataSource:inputStream	Ljava/io/InputStream;
    //   9: ifnull +10 -> 19
    //   12: aload_0
    //   13: getfield 50	com/google/android/exoplayer2/upstream/AssetDataSource:inputStream	Ljava/io/InputStream;
    //   16: invokevirtual 54	java/io/InputStream:close	()V
    //   19: aload_0
    //   20: aconst_null
    //   21: putfield 50	com/google/android/exoplayer2/upstream/AssetDataSource:inputStream	Ljava/io/InputStream;
    //   24: aload_0
    //   25: getfield 56	com/google/android/exoplayer2/upstream/AssetDataSource:opened	Z
    //   28: ifeq +12 -> 40
    //   31: aload_0
    //   32: iconst_0
    //   33: putfield 56	com/google/android/exoplayer2/upstream/AssetDataSource:opened	Z
    //   36: aload_0
    //   37: invokevirtual 59	com/google/android/exoplayer2/upstream/AssetDataSource:transferEnded	()V
    //   40: return
    //   41: astore_1
    //   42: goto +13 -> 55
    //   45: astore_1
    //   46: new 6	com/google/android/exoplayer2/upstream/AssetDataSource$AssetDataSourceException
    //   49: dup
    //   50: aload_1
    //   51: invokespecial 62	com/google/android/exoplayer2/upstream/AssetDataSource$AssetDataSourceException:<init>	(Ljava/io/IOException;)V
    //   54: athrow
    //   55: aload_0
    //   56: aconst_null
    //   57: putfield 50	com/google/android/exoplayer2/upstream/AssetDataSource:inputStream	Ljava/io/InputStream;
    //   60: aload_0
    //   61: getfield 56	com/google/android/exoplayer2/upstream/AssetDataSource:opened	Z
    //   64: ifeq +12 -> 76
    //   67: aload_0
    //   68: iconst_0
    //   69: putfield 56	com/google/android/exoplayer2/upstream/AssetDataSource:opened	Z
    //   72: aload_0
    //   73: invokevirtual 59	com/google/android/exoplayer2/upstream/AssetDataSource:transferEnded	()V
    //   76: aload_1
    //   77: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	78	0	this	AssetDataSource
    //   41	1	1	localObject	Object
    //   45	32	1	localIOException	IOException
    // Exception table:
    //   from	to	target	type
    //   5	19	41	finally
    //   46	55	41	finally
    //   5	19	45	java/io/IOException
  }
  
  @Nullable
  public Uri getUri()
  {
    return uri;
  }
  
  public long open(DataSpec paramDataSpec)
    throws AssetDataSource.AssetDataSourceException
  {
    try
    {
      uri = uri;
      String str2 = uri.getPath();
      String str1;
      if (str2.startsWith("/android_asset/"))
      {
        str1 = str2.substring(15);
      }
      else
      {
        str1 = str2;
        if (str2.startsWith("/")) {
          str1 = str2.substring(1);
        }
      }
      transferInitializing(paramDataSpec);
      inputStream = assetManager.open(str1, 1);
      if (inputStream.skip(position) >= position)
      {
        if (length != -1L)
        {
          bytesRemaining = length;
        }
        else
        {
          bytesRemaining = inputStream.available();
          if (bytesRemaining == 2147483647L) {
            bytesRemaining = -1L;
          }
        }
        opened = true;
        transferStarted(paramDataSpec);
        return bytesRemaining;
      }
      throw new EOFException();
    }
    catch (IOException paramDataSpec)
    {
      throw new AssetDataSourceException(paramDataSpec);
    }
  }
  
  public int read(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
    throws AssetDataSource.AssetDataSourceException
  {
    if (paramInt2 == 0) {
      return 0;
    }
    if (bytesRemaining == 0L) {
      return -1;
    }
    try
    {
      if (bytesRemaining != -1L) {
        paramInt2 = (int)Math.min(bytesRemaining, paramInt2);
      }
      paramInt1 = inputStream.read(paramArrayOfByte, paramInt1, paramInt2);
      if (paramInt1 == -1)
      {
        if (bytesRemaining == -1L) {
          return -1;
        }
        throw new AssetDataSourceException(new EOFException());
      }
      if (bytesRemaining != -1L) {
        bytesRemaining -= paramInt1;
      }
      bytesTransferred(paramInt1);
      return paramInt1;
    }
    catch (IOException paramArrayOfByte)
    {
      throw new AssetDataSourceException(paramArrayOfByte);
    }
  }
  
  public static final class AssetDataSourceException
    extends IOException
  {
    public AssetDataSourceException(IOException paramIOException)
    {
      super();
    }
  }
}
