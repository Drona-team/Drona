package com.google.android.exoplayer2.upstream;

import android.content.ContentResolver;
import android.content.Context;
import android.content.res.AssetFileDescriptor;
import android.net.Uri;
import androidx.annotation.Nullable;
import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.channels.FileChannel;

public final class ContentDataSource
  extends BaseDataSource
{
  @Nullable
  private AssetFileDescriptor assetFileDescriptor;
  private long bytesRemaining;
  @Nullable
  private FileInputStream inputStream;
  private boolean opened;
  private final ContentResolver resolver;
  @Nullable
  private Uri uri;
  
  public ContentDataSource(Context paramContext)
  {
    super(false);
    resolver = paramContext.getContentResolver();
  }
  
  @Deprecated
  public ContentDataSource(Context paramContext, @Nullable TransferListener paramTransferListener)
  {
    this(paramContext);
    if (paramTransferListener != null) {
      addTransferListener(paramTransferListener);
    }
  }
  
  /* Error */
  public void close()
    throws ContentDataSource.ContentDataSourceException
  {
    // Byte code:
    //   0: aload_0
    //   1: aconst_null
    //   2: putfield 50	com/google/android/exoplayer2/upstream/ContentDataSource:uri	Landroid/net/Uri;
    //   5: aload_0
    //   6: getfield 52	com/google/android/exoplayer2/upstream/ContentDataSource:inputStream	Ljava/io/FileInputStream;
    //   9: ifnull +10 -> 19
    //   12: aload_0
    //   13: getfield 52	com/google/android/exoplayer2/upstream/ContentDataSource:inputStream	Ljava/io/FileInputStream;
    //   16: invokevirtual 56	java/io/FileInputStream:close	()V
    //   19: aload_0
    //   20: aconst_null
    //   21: putfield 52	com/google/android/exoplayer2/upstream/ContentDataSource:inputStream	Ljava/io/FileInputStream;
    //   24: aload_0
    //   25: getfield 58	com/google/android/exoplayer2/upstream/ContentDataSource:assetFileDescriptor	Landroid/content/res/AssetFileDescriptor;
    //   28: ifnull +10 -> 38
    //   31: aload_0
    //   32: getfield 58	com/google/android/exoplayer2/upstream/ContentDataSource:assetFileDescriptor	Landroid/content/res/AssetFileDescriptor;
    //   35: invokevirtual 61	android/content/res/AssetFileDescriptor:close	()V
    //   38: aload_0
    //   39: aconst_null
    //   40: putfield 58	com/google/android/exoplayer2/upstream/ContentDataSource:assetFileDescriptor	Landroid/content/res/AssetFileDescriptor;
    //   43: aload_0
    //   44: getfield 63	com/google/android/exoplayer2/upstream/ContentDataSource:opened	Z
    //   47: ifeq +12 -> 59
    //   50: aload_0
    //   51: iconst_0
    //   52: putfield 63	com/google/android/exoplayer2/upstream/ContentDataSource:opened	Z
    //   55: aload_0
    //   56: invokevirtual 66	com/google/android/exoplayer2/upstream/ContentDataSource:transferEnded	()V
    //   59: return
    //   60: astore_1
    //   61: goto +13 -> 74
    //   64: astore_1
    //   65: new 6	com/google/android/exoplayer2/upstream/ContentDataSource$ContentDataSourceException
    //   68: dup
    //   69: aload_1
    //   70: invokespecial 69	com/google/android/exoplayer2/upstream/ContentDataSource$ContentDataSourceException:<init>	(Ljava/io/IOException;)V
    //   73: athrow
    //   74: aload_0
    //   75: aconst_null
    //   76: putfield 58	com/google/android/exoplayer2/upstream/ContentDataSource:assetFileDescriptor	Landroid/content/res/AssetFileDescriptor;
    //   79: aload_0
    //   80: getfield 63	com/google/android/exoplayer2/upstream/ContentDataSource:opened	Z
    //   83: ifeq +12 -> 95
    //   86: aload_0
    //   87: iconst_0
    //   88: putfield 63	com/google/android/exoplayer2/upstream/ContentDataSource:opened	Z
    //   91: aload_0
    //   92: invokevirtual 66	com/google/android/exoplayer2/upstream/ContentDataSource:transferEnded	()V
    //   95: aload_1
    //   96: athrow
    //   97: astore_1
    //   98: goto +13 -> 111
    //   101: astore_1
    //   102: new 6	com/google/android/exoplayer2/upstream/ContentDataSource$ContentDataSourceException
    //   105: dup
    //   106: aload_1
    //   107: invokespecial 69	com/google/android/exoplayer2/upstream/ContentDataSource$ContentDataSourceException:<init>	(Ljava/io/IOException;)V
    //   110: athrow
    //   111: aload_0
    //   112: aconst_null
    //   113: putfield 52	com/google/android/exoplayer2/upstream/ContentDataSource:inputStream	Ljava/io/FileInputStream;
    //   116: aload_0
    //   117: getfield 58	com/google/android/exoplayer2/upstream/ContentDataSource:assetFileDescriptor	Landroid/content/res/AssetFileDescriptor;
    //   120: ifnull +10 -> 130
    //   123: aload_0
    //   124: getfield 58	com/google/android/exoplayer2/upstream/ContentDataSource:assetFileDescriptor	Landroid/content/res/AssetFileDescriptor;
    //   127: invokevirtual 61	android/content/res/AssetFileDescriptor:close	()V
    //   130: aload_0
    //   131: aconst_null
    //   132: putfield 58	com/google/android/exoplayer2/upstream/ContentDataSource:assetFileDescriptor	Landroid/content/res/AssetFileDescriptor;
    //   135: aload_0
    //   136: getfield 63	com/google/android/exoplayer2/upstream/ContentDataSource:opened	Z
    //   139: ifeq +12 -> 151
    //   142: aload_0
    //   143: iconst_0
    //   144: putfield 63	com/google/android/exoplayer2/upstream/ContentDataSource:opened	Z
    //   147: aload_0
    //   148: invokevirtual 66	com/google/android/exoplayer2/upstream/ContentDataSource:transferEnded	()V
    //   151: aload_1
    //   152: athrow
    //   153: astore_1
    //   154: goto +13 -> 167
    //   157: astore_1
    //   158: new 6	com/google/android/exoplayer2/upstream/ContentDataSource$ContentDataSourceException
    //   161: dup
    //   162: aload_1
    //   163: invokespecial 69	com/google/android/exoplayer2/upstream/ContentDataSource$ContentDataSourceException:<init>	(Ljava/io/IOException;)V
    //   166: athrow
    //   167: aload_0
    //   168: aconst_null
    //   169: putfield 58	com/google/android/exoplayer2/upstream/ContentDataSource:assetFileDescriptor	Landroid/content/res/AssetFileDescriptor;
    //   172: aload_0
    //   173: getfield 63	com/google/android/exoplayer2/upstream/ContentDataSource:opened	Z
    //   176: ifeq +12 -> 188
    //   179: aload_0
    //   180: iconst_0
    //   181: putfield 63	com/google/android/exoplayer2/upstream/ContentDataSource:opened	Z
    //   184: aload_0
    //   185: invokevirtual 66	com/google/android/exoplayer2/upstream/ContentDataSource:transferEnded	()V
    //   188: aload_1
    //   189: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	190	0	this	ContentDataSource
    //   60	1	1	localObject1	Object
    //   64	32	1	localIOException1	IOException
    //   97	1	1	localObject2	Object
    //   101	51	1	localIOException2	IOException
    //   153	1	1	localObject3	Object
    //   157	32	1	localIOException3	IOException
    // Exception table:
    //   from	to	target	type
    //   24	38	60	finally
    //   65	74	60	finally
    //   24	38	64	java/io/IOException
    //   5	19	97	finally
    //   102	111	97	finally
    //   5	19	101	java/io/IOException
    //   116	130	153	finally
    //   158	167	153	finally
    //   116	130	157	java/io/IOException
  }
  
  @Nullable
  public Uri getUri()
  {
    return uri;
  }
  
  public long open(DataSpec paramDataSpec)
    throws ContentDataSource.ContentDataSourceException
  {
    try
    {
      uri = uri;
      transferInitializing(paramDataSpec);
      assetFileDescriptor = resolver.openAssetFileDescriptor(uri, "r");
      if (assetFileDescriptor != null)
      {
        inputStream = new FileInputStream(assetFileDescriptor.getFileDescriptor());
        long l1 = assetFileDescriptor.getStartOffset();
        long l2 = inputStream.skip(position + l1) - l1;
        if (l2 == position)
        {
          long l3 = length;
          l1 = -1L;
          if (l3 != -1L)
          {
            bytesRemaining = length;
          }
          else
          {
            l3 = assetFileDescriptor.getLength();
            if (l3 == -1L)
            {
              FileChannel localFileChannel = inputStream.getChannel();
              l2 = localFileChannel.size();
              if (l2 != 0L) {
                l1 = l2 - localFileChannel.position();
              }
              bytesRemaining = l1;
            }
            else
            {
              bytesRemaining = (l3 - l2);
            }
          }
          opened = true;
          transferStarted(paramDataSpec);
          return bytesRemaining;
        }
        throw new EOFException();
      }
      paramDataSpec = new StringBuilder();
      paramDataSpec.append("Could not open file descriptor for: ");
      paramDataSpec.append(uri);
      throw new FileNotFoundException(paramDataSpec.toString());
    }
    catch (IOException paramDataSpec)
    {
      throw new ContentDataSourceException(paramDataSpec);
    }
  }
  
  public int read(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
    throws ContentDataSource.ContentDataSourceException
  {
    if (paramInt2 == 0) {
      return 0;
    }
    if (bytesRemaining == 0L) {
      return -1;
    }
    try
    {
      if (bytesRemaining != -1L) {
        paramInt2 = (int)Math.min(bytesRemaining, paramInt2);
      }
      paramInt1 = inputStream.read(paramArrayOfByte, paramInt1, paramInt2);
      if (paramInt1 == -1)
      {
        if (bytesRemaining == -1L) {
          return -1;
        }
        throw new ContentDataSourceException(new EOFException());
      }
      if (bytesRemaining != -1L) {
        bytesRemaining -= paramInt1;
      }
      bytesTransferred(paramInt1);
      return paramInt1;
    }
    catch (IOException paramArrayOfByte)
    {
      throw new ContentDataSourceException(paramArrayOfByte);
    }
  }
  
  public static class ContentDataSourceException
    extends IOException
  {
    public ContentDataSourceException(IOException paramIOException)
    {
      super();
    }
  }
}
