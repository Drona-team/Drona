package com.facebook.device.yearclass;

import android.annotation.TargetApi;
import android.app.ActivityManager;
import android.app.ActivityManager.MemoryInfo;
import android.content.Context;
import android.os.Build.VERSION;
import java.io.File;
import java.io.FileFilter;
import java.io.FileInputStream;
import java.io.IOException;

public class DeviceInfo
{
  private static final FileFilter CPU_FILTER = new FileFilter()
  {
    public boolean accept(File paramAnonymousFile)
    {
      paramAnonymousFile = paramAnonymousFile.getName();
      if (paramAnonymousFile.startsWith("cpu"))
      {
        int i = 3;
        while (i < paramAnonymousFile.length())
        {
          if (!Character.isDigit(paramAnonymousFile.charAt(i))) {
            return false;
          }
          i += 1;
        }
        return true;
      }
      return false;
    }
  };
  public static final int DEVICEINFO_UNKNOWN = -1;
  
  public DeviceInfo() {}
  
  private static int extractValue(byte[] paramArrayOfByte, int paramInt)
  {
    while ((paramInt < paramArrayOfByte.length) && (paramArrayOfByte[paramInt] != 10))
    {
      if (Character.isDigit(paramArrayOfByte[paramInt]))
      {
        int i = paramInt + 1;
        while ((i < paramArrayOfByte.length) && (Character.isDigit(paramArrayOfByte[i]))) {
          i += 1;
        }
        return Integer.parseInt(new String(paramArrayOfByte, 0, paramInt, i - paramInt));
      }
      paramInt += 1;
    }
    return -1;
  }
  
  /* Error */
  public static int getCPUMaxFreqKHz()
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore_2
    //   2: iconst_m1
    //   3: istore_0
    //   4: iload_2
    //   5: invokestatic 48	com/facebook/device/yearclass/DeviceInfo:getNumberOfCPUCores	()I
    //   8: if_icmpge +162 -> 170
    //   11: new 50	java/lang/StringBuilder
    //   14: dup
    //   15: invokespecial 51	java/lang/StringBuilder:<init>	()V
    //   18: astore_3
    //   19: aload_3
    //   20: ldc 53
    //   22: invokevirtual 57	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   25: pop
    //   26: aload_3
    //   27: iload_2
    //   28: invokevirtual 60	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   31: pop
    //   32: aload_3
    //   33: ldc 62
    //   35: invokevirtual 57	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   38: pop
    //   39: new 64	java/io/File
    //   42: dup
    //   43: aload_3
    //   44: invokevirtual 68	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   47: invokespecial 71	java/io/File:<init>	(Ljava/lang/String;)V
    //   50: astore_3
    //   51: iload_0
    //   52: istore_1
    //   53: aload_3
    //   54: invokevirtual 75	java/io/File:exists	()Z
    //   57: ifeq +178 -> 235
    //   60: iload_0
    //   61: istore_1
    //   62: aload_3
    //   63: invokevirtual 78	java/io/File:canRead	()Z
    //   66: ifeq +169 -> 235
    //   69: sipush 128
    //   72: newarray byte
    //   74: astore 4
    //   76: new 80	java/io/FileInputStream
    //   79: dup
    //   80: aload_3
    //   81: invokespecial 83	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   84: astore_3
    //   85: aload_3
    //   86: aload 4
    //   88: invokevirtual 87	java/io/FileInputStream:read	([B)I
    //   91: pop
    //   92: iconst_0
    //   93: istore_1
    //   94: aload 4
    //   96: iload_1
    //   97: baload
    //   98: invokestatic 28	java/lang/Character:isDigit	(I)Z
    //   101: ifeq +17 -> 118
    //   104: iload_1
    //   105: aload 4
    //   107: arraylength
    //   108: if_icmpge +10 -> 118
    //   111: iload_1
    //   112: iconst_1
    //   113: iadd
    //   114: istore_1
    //   115: goto -21 -> 94
    //   118: new 30	java/lang/String
    //   121: dup
    //   122: aload 4
    //   124: iconst_0
    //   125: iload_1
    //   126: invokespecial 90	java/lang/String:<init>	([BII)V
    //   129: invokestatic 39	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   132: invokestatic 94	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   135: astore 4
    //   137: iload_0
    //   138: istore_1
    //   139: aload 4
    //   141: invokevirtual 97	java/lang/Integer:intValue	()I
    //   144: iload_0
    //   145: if_icmple +9 -> 154
    //   148: aload 4
    //   150: invokevirtual 97	java/lang/Integer:intValue	()I
    //   153: istore_1
    //   154: aload_3
    //   155: invokevirtual 100	java/io/FileInputStream:close	()V
    //   158: goto +77 -> 235
    //   161: astore 4
    //   163: aload_3
    //   164: invokevirtual 100	java/io/FileInputStream:close	()V
    //   167: aload 4
    //   169: athrow
    //   170: iload_0
    //   171: iconst_m1
    //   172: if_icmpne +51 -> 223
    //   175: new 80	java/io/FileInputStream
    //   178: dup
    //   179: ldc 102
    //   181: invokespecial 103	java/io/FileInputStream:<init>	(Ljava/lang/String;)V
    //   184: astore_3
    //   185: ldc 105
    //   187: aload_3
    //   188: invokestatic 109	com/facebook/device/yearclass/DeviceInfo:parseFileForValue	(Ljava/lang/String;Ljava/io/FileInputStream;)I
    //   191: istore_1
    //   192: iload_1
    //   193: sipush 1000
    //   196: imul
    //   197: istore_1
    //   198: iload_1
    //   199: iload_0
    //   200: if_icmple +8 -> 208
    //   203: iload_1
    //   204: istore_0
    //   205: goto +3 -> 208
    //   208: aload_3
    //   209: invokevirtual 100	java/io/FileInputStream:close	()V
    //   212: iload_0
    //   213: ireturn
    //   214: astore 4
    //   216: aload_3
    //   217: invokevirtual 100	java/io/FileInputStream:close	()V
    //   220: aload 4
    //   222: athrow
    //   223: iload_0
    //   224: ireturn
    //   225: astore_3
    //   226: iconst_m1
    //   227: ireturn
    //   228: astore 4
    //   230: iload_0
    //   231: istore_1
    //   232: goto -78 -> 154
    //   235: iload_2
    //   236: iconst_1
    //   237: iadd
    //   238: istore_2
    //   239: iload_1
    //   240: istore_0
    //   241: goto -237 -> 4
    // Local variable table:
    //   start	length	slot	name	signature
    //   3	238	0	i	int
    //   52	188	1	j	int
    //   1	238	2	k	int
    //   18	199	3	localObject1	Object
    //   225	1	3	localIOException	IOException
    //   74	75	4	localObject2	Object
    //   161	7	4	localObject3	Object
    //   214	7	4	localObject4	Object
    //   228	1	4	localNumberFormatException	NumberFormatException
    // Exception table:
    //   from	to	target	type
    //   85	92	161	finally
    //   94	111	161	finally
    //   118	137	161	finally
    //   139	154	161	finally
    //   185	192	214	finally
    //   4	51	225	java/io/IOException
    //   53	60	225	java/io/IOException
    //   62	85	225	java/io/IOException
    //   154	158	225	java/io/IOException
    //   163	170	225	java/io/IOException
    //   175	185	225	java/io/IOException
    //   208	212	225	java/io/IOException
    //   216	223	225	java/io/IOException
    //   85	92	228	java/lang/NumberFormatException
    //   94	111	228	java/lang/NumberFormatException
    //   118	137	228	java/lang/NumberFormatException
    //   139	154	228	java/lang/NumberFormatException
  }
  
  private static int getCoresFromCPUFileList()
  {
    return new File("/sys/devices/system/cpu/").listFiles(CPU_FILTER).length;
  }
  
  /* Error */
  private static int getCoresFromFileInfo(String paramString)
  {
    // Byte code:
    //   0: new 80	java/io/FileInputStream
    //   3: dup
    //   4: aload_0
    //   5: invokespecial 103	java/io/FileInputStream:<init>	(Ljava/lang/String;)V
    //   8: astore_0
    //   9: new 119	java/io/BufferedReader
    //   12: dup
    //   13: new 121	java/io/InputStreamReader
    //   16: dup
    //   17: aload_0
    //   18: invokespecial 124	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   21: invokespecial 127	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   24: astore_2
    //   25: aload_2
    //   26: invokevirtual 130	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   29: astore_3
    //   30: aload_2
    //   31: invokevirtual 131	java/io/BufferedReader:close	()V
    //   34: aload_3
    //   35: invokestatic 134	com/facebook/device/yearclass/DeviceInfo:getCoresFromFileString	(Ljava/lang/String;)I
    //   38: istore_1
    //   39: aload_0
    //   40: invokevirtual 137	java/io/InputStream:close	()V
    //   43: iload_1
    //   44: ireturn
    //   45: astore_3
    //   46: aload_0
    //   47: astore_2
    //   48: aload_3
    //   49: astore_0
    //   50: goto +9 -> 59
    //   53: goto +18 -> 71
    //   56: astore_0
    //   57: aconst_null
    //   58: astore_2
    //   59: aload_2
    //   60: ifnull +7 -> 67
    //   63: aload_2
    //   64: invokevirtual 137	java/io/InputStream:close	()V
    //   67: aload_0
    //   68: athrow
    //   69: aconst_null
    //   70: astore_0
    //   71: aload_0
    //   72: ifnull +7 -> 79
    //   75: aload_0
    //   76: invokevirtual 137	java/io/InputStream:close	()V
    //   79: iconst_m1
    //   80: ireturn
    //   81: astore_0
    //   82: goto -13 -> 69
    //   85: astore_2
    //   86: goto -33 -> 53
    //   89: astore_0
    //   90: iload_1
    //   91: ireturn
    //   92: astore_2
    //   93: goto -26 -> 67
    //   96: astore_0
    //   97: iconst_m1
    //   98: ireturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	99	0	paramString	String
    //   38	53	1	i	int
    //   24	40	2	localObject1	Object
    //   85	1	2	localIOException1	IOException
    //   92	1	2	localIOException2	IOException
    //   29	6	3	str	String
    //   45	4	3	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   9	39	45	finally
    //   0	9	56	finally
    //   0	9	81	java/io/IOException
    //   9	39	85	java/io/IOException
    //   39	43	89	java/io/IOException
    //   63	67	92	java/io/IOException
    //   75	79	96	java/io/IOException
  }
  
  static int getCoresFromFileString(String paramString)
  {
    if ((paramString != null) && (paramString.matches("0-[\\d]+$"))) {
      return Integer.valueOf(paramString.substring(2)).intValue() + 1;
    }
    return -1;
  }
  
  public static int getNumberOfCPUCores()
  {
    if (Build.VERSION.SDK_INT <= 10) {
      return 1;
    }
    try
    {
      int j = getCoresFromFileInfo("/sys/devices/system/cpu/possible");
      int i = j;
      if (j == -1) {
        i = getCoresFromFileInfo("/sys/devices/system/cpu/present");
      }
      j = i;
      if (i == -1) {
        j = getCoresFromCPUFileList();
      }
      return j;
    }
    catch (SecurityException|NullPointerException localSecurityException) {}
    return -1;
  }
  
  @TargetApi(16)
  public static long getTotalMemory(Context paramContext)
  {
    if (Build.VERSION.SDK_INT >= 16)
    {
      ActivityManager.MemoryInfo localMemoryInfo = new ActivityManager.MemoryInfo();
      ((ActivityManager)paramContext.getSystemService("activity")).getMemoryInfo(localMemoryInfo);
      return totalMem;
    }
    long l2 = -1L;
    l1 = l2;
    try
    {
      paramContext = new FileInputStream("/proc/meminfo");
      try
      {
        int i = parseFileForValue("MemTotal", paramContext);
        l2 = i * 1024L;
        l1 = l2;
        paramContext.close();
        return l2;
      }
      finally
      {
        l1 = l2;
        paramContext.close();
        l1 = l2;
      }
      return l1;
    }
    catch (IOException paramContext) {}
  }
  
  private static int parseFileForValue(String paramString, FileInputStream paramFileInputStream)
  {
    arrayOfByte = new byte['?'];
    for (;;)
    {
      try
      {
        m = paramFileInputStream.read(arrayOfByte);
        j = 0;
      }
      catch (IOException|NumberFormatException paramString)
      {
        int m;
        continue;
        if (j >= m) {
          continue;
        }
        if (arrayOfByte[j] == 10) {
          continue;
        }
        int k = j;
        if (j != 0) {
          continue;
        }
        int i = j;
        if (arrayOfByte[j] != 10) {
          continue;
        }
        i = j + 1;
        int j = i;
        continue;
      }
      k = i;
      if (j >= m) {
        continue;
      }
      k = j - i;
      if (arrayOfByte[j] != paramString.charAt(k))
      {
        k = i;
        continue;
      }
      if (k == paramString.length() - 1)
      {
        i = extractValue(arrayOfByte, j);
        return i;
      }
      j += 1;
    }
    j = k + 1;
    break label94;
    return -1;
  }
}
