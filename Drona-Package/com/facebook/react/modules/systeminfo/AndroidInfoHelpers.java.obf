package com.facebook.react.modules.systeminfo;

import android.content.Context;
import android.content.res.Resources;
import android.os.Build;
import android.os.Build.VERSION;
import com.facebook.react.R.integer;
import java.util.Locale;

public class AndroidInfoHelpers
{
  public static final String DEVICE_LOCALHOST = "localhost";
  public static final String EMULATOR_LOCALHOST = "10.0.2.2";
  public static final String GENYMOTION_LOCALHOST = "10.0.3.2";
  public static final String METRO_HOST_PROP_NAME = "metro.host";
  private static final String TAG = "AndroidInfoHelpers";
  private static String metroHostPropValue;
  
  public AndroidInfoHelpers() {}
  
  public static String getAdbReverseTcpCommand(Context paramContext)
  {
    return getAdbReverseTcpCommand(getDevServerPort(paramContext));
  }
  
  public static String getAdbReverseTcpCommand(Integer paramInteger)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("adb reverse tcp:");
    localStringBuilder.append(paramInteger);
    localStringBuilder.append(" tcp:");
    localStringBuilder.append(paramInteger);
    return localStringBuilder.toString();
  }
  
  private static Integer getDevServerPort(Context paramContext)
  {
    return Integer.valueOf(paramContext.getResources().getInteger(R.integer.react_native_dev_server_port));
  }
  
  public static String getFriendlyDeviceName()
  {
    if (isRunningOnGenymotion()) {
      return Build.MODEL;
    }
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(Build.MODEL);
    localStringBuilder.append(" - ");
    localStringBuilder.append(Build.VERSION.RELEASE);
    localStringBuilder.append(" - API ");
    localStringBuilder.append(Build.VERSION.SDK_INT);
    return localStringBuilder.toString();
  }
  
  public static String getInspectorProxyHost(Context paramContext)
  {
    return getServerIpAddress(getInspectorProxyPort(paramContext).intValue());
  }
  
  private static Integer getInspectorProxyPort(Context paramContext)
  {
    return Integer.valueOf(paramContext.getResources().getInteger(R.integer.react_native_dev_server_port));
  }
  
  /* Error */
  private static String getMetroHostPropValue()
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: getstatic 120	com/facebook/react/modules/systeminfo/AndroidInfoHelpers:metroHostPropValue	Ljava/lang/String;
    //   6: ifnull +12 -> 18
    //   9: getstatic 120	com/facebook/react/modules/systeminfo/AndroidInfoHelpers:metroHostPropValue	Ljava/lang/String;
    //   12: astore_0
    //   13: ldc 2
    //   15: monitorexit
    //   16: aload_0
    //   17: areturn
    //   18: aconst_null
    //   19: astore_2
    //   20: aconst_null
    //   21: astore_1
    //   22: aconst_null
    //   23: astore 5
    //   25: invokestatic 126	java/lang/Runtime:getRuntime	()Ljava/lang/Runtime;
    //   28: iconst_2
    //   29: anewarray 128	java/lang/String
    //   32: dup
    //   33: iconst_0
    //   34: ldc -126
    //   36: aastore
    //   37: dup
    //   38: iconst_1
    //   39: ldc 17
    //   41: aastore
    //   42: invokevirtual 134	java/lang/Runtime:exec	([Ljava/lang/String;)Ljava/lang/Process;
    //   45: astore_0
    //   46: aload_2
    //   47: astore_1
    //   48: aload_0
    //   49: astore_2
    //   50: new 136	java/io/BufferedReader
    //   53: dup
    //   54: new 138	java/io/InputStreamReader
    //   57: dup
    //   58: aload_0
    //   59: invokevirtual 144	java/lang/Process:getInputStream	()Ljava/io/InputStream;
    //   62: ldc -110
    //   64: invokestatic 152	java/nio/charset/Charset:forName	(Ljava/lang/String;)Ljava/nio/charset/Charset;
    //   67: invokespecial 155	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
    //   70: invokespecial 158	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   73: astore_3
    //   74: ldc -96
    //   76: astore_1
    //   77: aload_3
    //   78: invokevirtual 163	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   81: astore_2
    //   82: aload_2
    //   83: ifnull +8 -> 91
    //   86: aload_2
    //   87: astore_1
    //   88: goto -11 -> 77
    //   91: aload_1
    //   92: putstatic 120	com/facebook/react/modules/systeminfo/AndroidInfoHelpers:metroHostPropValue	Ljava/lang/String;
    //   95: aload_3
    //   96: invokevirtual 166	java/io/BufferedReader:close	()V
    //   99: aload_0
    //   100: ifnull +82 -> 182
    //   103: aload_0
    //   104: invokevirtual 169	java/lang/Process:destroy	()V
    //   107: goto +75 -> 182
    //   110: astore_2
    //   111: aload_3
    //   112: astore_1
    //   113: aload_2
    //   114: astore_3
    //   115: goto +79 -> 194
    //   118: astore 4
    //   120: goto +24 -> 144
    //   123: astore 4
    //   125: aload 5
    //   127: astore_3
    //   128: goto +16 -> 144
    //   131: astore_3
    //   132: aconst_null
    //   133: astore_0
    //   134: goto +60 -> 194
    //   137: astore 4
    //   139: aconst_null
    //   140: astore_0
    //   141: aload 5
    //   143: astore_3
    //   144: aload_3
    //   145: astore_1
    //   146: aload_0
    //   147: astore_2
    //   148: getstatic 171	com/facebook/react/modules/systeminfo/AndroidInfoHelpers:TAG	Ljava/lang/String;
    //   151: ldc -83
    //   153: aload 4
    //   155: invokestatic 179	com/facebook/common/logging/FLog:w	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
    //   158: aload_3
    //   159: astore_1
    //   160: aload_0
    //   161: astore_2
    //   162: ldc -96
    //   164: putstatic 120	com/facebook/react/modules/systeminfo/AndroidInfoHelpers:metroHostPropValue	Ljava/lang/String;
    //   167: aload_3
    //   168: ifnull +7 -> 175
    //   171: aload_3
    //   172: invokevirtual 166	java/io/BufferedReader:close	()V
    //   175: aload_0
    //   176: ifnull +6 -> 182
    //   179: goto -76 -> 103
    //   182: getstatic 120	com/facebook/react/modules/systeminfo/AndroidInfoHelpers:metroHostPropValue	Ljava/lang/String;
    //   185: astore_0
    //   186: ldc 2
    //   188: monitorexit
    //   189: aload_0
    //   190: areturn
    //   191: astore_3
    //   192: aload_2
    //   193: astore_0
    //   194: aload_1
    //   195: ifnull +7 -> 202
    //   198: aload_1
    //   199: invokevirtual 166	java/io/BufferedReader:close	()V
    //   202: aload_0
    //   203: ifnull +7 -> 210
    //   206: aload_0
    //   207: invokevirtual 169	java/lang/Process:destroy	()V
    //   210: aload_3
    //   211: athrow
    //   212: astore_0
    //   213: ldc 2
    //   215: monitorexit
    //   216: aload_0
    //   217: athrow
    //   218: astore_1
    //   219: goto -120 -> 99
    //   222: astore_1
    //   223: goto -48 -> 175
    //   226: astore_1
    //   227: goto -25 -> 202
    // Local variable table:
    //   start	length	slot	name	signature
    //   12	195	0	localObject1	Object
    //   212	5	0	localObject2	Object
    //   21	178	1	localObject3	Object
    //   218	1	1	localException1	Exception
    //   222	1	1	localException2	Exception
    //   226	1	1	localException3	Exception
    //   19	68	2	localObject4	Object
    //   110	4	2	localObject5	Object
    //   147	46	2	localObject6	Object
    //   73	55	3	localObject7	Object
    //   131	1	3	localObject8	Object
    //   143	29	3	localObject9	Object
    //   191	20	3	localObject10	Object
    //   118	1	4	localException4	Exception
    //   123	1	4	localException5	Exception
    //   137	17	4	localException6	Exception
    //   23	119	5	localObject11	Object
    // Exception table:
    //   from	to	target	type
    //   77	82	110	finally
    //   91	95	110	finally
    //   77	82	118	java/lang/Exception
    //   91	95	118	java/lang/Exception
    //   50	74	123	java/lang/Exception
    //   25	46	131	finally
    //   25	46	137	java/lang/Exception
    //   50	74	191	finally
    //   148	158	191	finally
    //   162	167	191	finally
    //   3	13	212	finally
    //   95	99	212	finally
    //   103	107	212	finally
    //   171	175	212	finally
    //   182	186	212	finally
    //   198	202	212	finally
    //   206	210	212	finally
    //   210	212	212	finally
    //   95	99	218	java/lang/Exception
    //   171	175	222	java/lang/Exception
    //   198	202	226	java/lang/Exception
  }
  
  public static String getServerHost(Context paramContext)
  {
    return getServerIpAddress(getDevServerPort(paramContext).intValue());
  }
  
  public static String getServerHost(Integer paramInteger)
  {
    return getServerIpAddress(paramInteger.intValue());
  }
  
  private static String getServerIpAddress(int paramInt)
  {
    String str = getMetroHostPropValue();
    if (str.equals("")) {
      if (isRunningOnGenymotion()) {
        str = "10.0.3.2";
      } else if (isRunningOnStockEmulator()) {
        str = "10.0.2.2";
      } else {
        str = "localhost";
      }
    }
    return String.format(Locale.US, "%s:%d", new Object[] { str, Integer.valueOf(paramInt) });
  }
  
  private static boolean isRunningOnGenymotion()
  {
    return Build.FINGERPRINT.contains("vbox");
  }
  
  private static boolean isRunningOnStockEmulator()
  {
    return Build.FINGERPRINT.contains("generic");
  }
}
